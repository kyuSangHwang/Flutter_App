[comment]: <> (코딩세프 플러터 강의 순한맛 시즌1)

# 순한맛 강좌 시즌 1 | 1강 : 우리는 왜 플러터(flutter)를 학습해야 할까요?

### 플러터 강좌에 앞서 아래의 두가지를 살펴보는 시간
- 왜 이 시점에서 플러터에 관심을 갖어야하고
- 왜 구글은 앞으로 플러터와 관련해서 어떤 행보를 보일지.


### 플러터를 이해하려면 구글의 비밀 프로젝트인 Fuchsia OS 프로젝트를 살펴보면 좋음
- Fuchsia는 꽃의 이름이며, 꽃말은 좋아함, 열열한 맘.
- 구글은 이미 시장을 지배하는 두 개의 걸출한 OS를 가지고 있음.
    - Android OS.
    - Chorme OS.


## 그렇다면 왜 구글은 이 시점에서 새로운 OS를 준비하는 것일까?
### Fuchsia의 흔적들을 먼저 살펴보자
- 2016년 8월, 어떤 정보,공식 발표도 없이 깃허브에 코드가 게시.
- 당시 이름은 마젠타였음. Zircon(지르콘)이라는 마이크로 커널을 기반으로 하고 있음.
- 2017년 11월 swift 지원계획이 밝혀짐.
- 2018년 1월 픽셀북을 공식 Fuchsia 테스트 디바이스로 추가.
- 2019년 1월 안드로이드앱 구동 가능성.
- 2019년 5월 구글 I/O에서 Fuchsia가 언급됨.
- 2019년 7월 1일 Fuchsia 홈페이지 오픈


## OS(운영체계)에서 핵심적인 역할을 하는 부분 = OS 구동 시 중간에서 하드웨어와 소프트웨어를 연결시켜주는 역할

### 이시간에는 구글 관련해서 두 종류만 언급하겠음.
- 마이크로 커널 (Micro kernel)
    - 지르콘인 Fuchsia에서 사용 되고 있고 구글에서 개발했다.
- 단일형 커널 (Monolithic kernel)
    - Adroid에서 사용되고 있고 Open Source인 Linux kenel이다.
      즉, 능력만 된다면 누구나 수정이 가능다는 의미이다.


## 두 커널의 구조를 간단하게 살펴보면
- Micro kernel(Zircon kernel)
    - 마이크로 커널은 그 이름대로 커널에 최소한의 필수적인 기능만을 집어 넣은 것.
    - 그 외에 기능들은 모듈화 시켜서 조립식으로 사용하는 커널.
- 단일형 커널(Monolithic kernel)
    - 단일한 커널은 커널에 필요한 모든 기능들을 커널의 한 곳에 모아둔 것.
    - 단일한 커널의 단점 : 이 모든 기능들이 커널이 한곳에 모여서 서로 얽혀 있기 때문에 업데이트나 수정을 하려면 시간과 노력이 많이 필요하다는 것.
    - 이는 나름 Android 파패너(?) 큰 이유이기도 합니다. (무슨 말이지..)


### 그럼 다시 본론으로 돌아가서 구체적으로 구글은 왜 Fuchsia os 를 만들려고 하는 것일까요?
1. 지리콘은 임베디드 응용프로그램에서 일반적으로 사용되는 소형 시스템용으로 설계된 Little Kernel의 파생물.
2. 지르콘은 현대적 전화기와 고속이 프로세스를 갖춘 개인용 컴퓨터를 타깃으로 하고 있다.
3. 음성 명령
    - 향후 ai 스피커와 사물인터넷 기기 등 디스플레이가 없는 기기들이 상당히 늘어날 것.
    - 이런 기기들을 제어하는데 음성 명령은 가위 필수적인 기능 이라고 할 수 있다.
    - 하지만 Android는 개발된 지 10년 정도가 지난 OS 입니다
        - 현재의 ai 스피커와 사물인터넷 환경과는 달리 Android 는 터치 디스플레이에 최적화가 되어 있다.
        - 구글은 아마도 Android를 가지고서는 터치 디스플레이가 없는 기기들을 제어하는 데 있어서 최적화가 힘들다고 판단했을 가능성이 높다.
    - 반면에 Fuchsia OS는 모듈 단에서부터 별도의 과정 없이 동작할 수 있도록 설계에서 어떠한 환경에서도 즉각적으로 음성 명령을 수행할 수 있도록 설계 되었다.
4. Android 에 파편화
    - 최근에 구글은 트래블이란 정책을 사용하고 있음.
    - 트래블이란 스마트폰 제조사들이 소프트웨어에 큰 변화를 주지 않고도 보다 빠르고 쉽게 새로운 Android OS 의 업데이트를 배포할 수 있도록 도와주는 정책.
    - 그래서 예전보다는 사정이 좀 나아지고 있지만 iOS에 비한다면 여전히 형편없는 업데이트 속도를 보여주고 있고 무엇보다 업데이트의 주도권을 구글이 쥐고 있는 것이 아니라 제조사들이 쥐고 있는 상태
        - 제 아무리 구글이 필요에 따라서 발 빠른 업데이트를 진행한다고 해도 스마트폰 제조사들이 반영해 주지 않으면 아무런 의미가 없다는 것.
    - 반면 Fuchsia는 사물인터넷 기기들을 지원하기 때문에 보안 문제 상 항상 최신 업데이트를 제공할 가능성이 아주 크며 주도권 역시 구글이 쥘 수 있다.
5. 오라클과의 자바 특허 전쟁
    - 아직 완전히 끝났다고 볼 수는 없지만 작년 법원의 판결로 구글은 거의 10조 원에 가까운 라이선스 비용을 지불해야 할 상황에 처해 있다.
    - 결국 구글이 Android OS 를 사용하는 한 결코 잡아 에서 벗어날 수 없으며 이는 두고두고 구글을 괴롭힐 가능성이 큽니다
